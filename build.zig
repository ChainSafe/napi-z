// This file is generated by zbuild. Do not edit manually.

const std = @import("std");

pub fn build(b: *std.Build) void {
    const target = b.standardTargetOptions(.{});
    const optimize = b.standardOptimizeOption(.{});

    const module_napi = b.createModule(.{
        .root_source_file = b.path("src/root.zig"),
        .target = target,
        .optimize = optimize,
    });
    module_napi.addIncludePath(b.path("include"));
    b.modules.put(b.dupe("napi"), module_napi) catch @panic("OOM");

    const module_example = b.createModule(.{
        .root_source_file = b.path("example/mod.zig"),
        .target = target,
        .optimize = optimize,
    });
    b.modules.put(b.dupe("example"), module_example) catch @panic("OOM");

    const lib_example = b.addLibrary(.{
        .name = "example",
        .root_module = module_example,
        .linkage = .dynamic,
    });

    const install_lib_example = b.addInstallArtifact(lib_example, .{
        .dest_sub_path = "example.node",
    });

    const tls_install_lib_example = b.step("build-lib:example", "Install the example library");
    tls_install_lib_example.dependOn(&install_lib_example.step);
    b.getInstallStep().dependOn(&install_lib_example.step);

    const tls_run_test = b.step("test", "Run all tests");

    const test_napi = b.addTest(.{
        .name = "napi",
        .root_module = module_napi,
        .filters = &[_][]const u8{},
    });
    const install_test_napi = b.addInstallArtifact(test_napi, .{});
    const tls_install_test_napi = b.step("build-test:napi", "Install the napi test");
    tls_install_test_napi.dependOn(&install_test_napi.step);

    const run_test_napi = b.addRunArtifact(test_napi);
    const tls_run_test_napi = b.step("test:napi", "Run the napi test");
    tls_run_test_napi.dependOn(&run_test_napi.step);
    tls_run_test.dependOn(&run_test_napi.step);

    const test_example = b.addTest(.{
        .name = "example",
        .root_module = module_example,
        .filters = &[_][]const u8{},
    });
    const install_test_example = b.addInstallArtifact(test_example, .{});
    const tls_install_test_example = b.step("build-test:example", "Install the example test");
    tls_install_test_example.dependOn(&install_test_example.step);

    const run_test_example = b.addRunArtifact(test_example);
    const tls_run_test_example = b.step("test:example", "Run the example test");
    tls_run_test_example.dependOn(&run_test_example.step);
    tls_run_test.dependOn(&run_test_example.step);

    module_example.addImport("napi", module_napi);
}
